{"ts":1343072953118,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"$(document).data('queue',[]); // set up a queue to buffer elements loaded by deferreds\n        \nvar rssParser = {\n    name: \"rss\",\n    resultsSelector: \"data.responseData.feed.entries\",\n    heading: \"RSS\",\n    headingSelector: \"item.title\",\n    txtSelector: null,\n    imgSrc: null,\n    imgSrcSelector: \"$(item.content).find(\\\"img:lt(1)\\\").attr(\\\"src\\\")\",\n    imgSrcProcessor: null,\n    imgHref: \"\",\n    imgHrefSelector: \"$(item.content).find(\\\"img:lt(1)\\\").parent().attr(\\\"href\\\")\",\n    imgAltSelector: \"item.contentSnippet\",\n    link: \"\",\n    linkSelector: null,\n    linkTipSelector: \"item.contentSnippet\",\n    preProcessor: null,\n    preCondition: \"$(item.content).find(\\\"img[src]:contains('http')\\\")\"\n};\n\n\nvar cParser = {\n     name: \"craigslist\",\n     resultsSelector:\"$(data.responseText).find(\\\"p.row:contains('pic'):lt(10)\\\")\",\n     heading: \"Craigs\",\n     headingSelector: \"$elem.find(\\\"a,font\\\").text()\",\n     txtSelector: \"\",\n     imgSrcSelector: \"\\\"http://images.craigslist.org/\\\"+$elem.find(\\\"span.ih[id]\\\").attr(\\\"id\\\")\",\n     imgSrcProcessor: \"imgSrc.replace(\\\"images:\\\",\\\"\\\")\",\n     imgHrefSelector: \"$elem.find(\\\"a\\\").attr(\\\"href\\\")\",\n     imgAltSelector: \"fixCase($(item).find(\\\"a,font\\\").text())\",\n     link: \"#\",\n     linkSelector: null,\n     linkTooltip: null,\n     preProcessor: null,\n     preCondition: \"true\"\n}\n\nvar liParser = {\n    name: \"linkedin\",\n    resultsSelector: \"data.responseData.feed.entries\",\n    heading: \"RSS\",\n    headingSelector: \"item.title\",\n    txtSelector: null,\n    imgSrc: null,\n    imgSrcSelector: \"$(item.content).find(\\\"img:lt(1)\\\").attr(\\\"src\\\")\",\n    imgSrcProcessor: null,\n    imgHref: \"\",\n    imgHrefSelector: \"$(item.content).find(\\\"img:lt(1)\\\").parent().attr(\\\"href\\\")\",\n    imgAltSelector: \"item.contentSnippet\",\n    link: \"\",\n    linkSelector: null,\n    linkTipSelector: \"item.contentSnippet\",\n    preProcessor: null,\n    preCondition: \"$(item.content).find(\\\"img[src]:contains('http')\\\")\"\n};\n   \n   \n       \nvar firstPage = function(){    // load the first page\n    console.log(\"done loading\");    \n};\n\n// p\n(function($) {\n\n    $.fn.wall = function(method) {\n\n        var methods = {\n\n            init : function(options) {\n                this.wall.settings = $.extend({}, this.wall.defaults, options);\n                networks = this.wall.settings.networks;  \n                processList = [];        \n                return this.each(function() {\n                    var $element = $(this),\n                    element = this;\n                    \n                    networks.forEach(function(item) {\n                        //get network settings\n                        nw = helpers.networkDefs[item];\n                        nw.cb=function(newElement){$(document).data('queue').push(newElement)};\n                        processList.push(helpers.doRequest(nw.url,nw.dataType,nw.cb,nw.parser));\n\n                        $.when.apply(null, processList).then(function(){\n                                \n                            //console.log(\"all done\");\n                            var $con=$('#content');\n                            var queue = $(document).data('queue');\n                            var urls = $(document).data('urls');\n                            \n                            if (($con).hasClass(\"isotope\")) { // have we already built isotope?\n                            \n                                var $newStuff=$('<div/>');\n                            \n                                for (var i = 0; i < queue.length; i++) {\n                                    queue[i].children().appendTo($newStuff);\n                                }\n                                \n                                $con.isotope('insert',$newStuff.children(),function(){\n                                \n                                });\n                            \n                            }\n                            else {\n\n                                //console.log(queue.length)\n                                \n                                for (var i = 0; i < queue.length; i++) {\n                                    queue[i].children().appendTo($con);\n                                    //queue[i].appendTo($con);\n                                }\n                                \n                                $con.imagesLoaded(function(){\n                                    $con.isotope({\n                                        itemSelector : '.outer',\n                                        sortBy : 'random'\n                                    });\n                                });\n                            }\n                            \n                            $(document).data('queue',[]); // clear the queue;\n                            //callback();\n\n                        },function(){\n                            //console.log('some requests failed.')\n                        });\n                        \n                    });\n                    \n                });\n\n            },\n\n            public_method: function() {\n                // code goes here\n            }\n\n        }\n\n        var helpers = {\n            loader: function loader(pageNo,resources,callback) {\n                \n            },\n            parseResults: function(apiParser,data) {\n                \n                var $cont=$('<div></div>');\n                //console.log(JSON.stringify(data));\n\n                $.each(eval(apiParser.resultsSelector), function(i,item) {\n\n                    var $elem = $(item);\n                    \n                    if (eval(apiParser.preCondition)) {\n                        var $div = $('<div class=\"outer\"></div>');           \n                                        \n                        if (apiParser.headingSelector!=null){\n                            heading = fixCase(shorten(eval(apiParser.headingSelector),29));\n                        }\n                        else {\n                            heading = apiParser.heading;\n                        }\n                        \n                        txt=eval(apiParser.txtSelector);\n                        if (txt!=null) {\n                            txt = shorten(txt,75);\n                        }\n                        else {\n                            txt = \"\";\n                        }\n                        \n                        // link href\n                        linkHref=\"#\";\n                        \n                        // link title - tooltip\n                        if (apiParser.linkTip==null){\n                            linkTip=\"in1\";\n                        }\n                        else {\n                            linkTip=eval(apiParser.linkTipSelector);\n                        }\n                        \n                        // image src\n                        if (apiParser.imgSrcSelector==null){\n                            imgSrc=apiParser.imgSrc;\n                        }\n                        else {\n                            imgSrc=eval(apiParser.imgSrcSelector);\n                            //console.log(imgSrc);\n                            if (imgSrc!=null && apiParser.imgSrcProcessor!=null){\n                                imgSrc=eval(apiParser.imgSrcProcessor);\n                            }\n                            else if (imgSrc==null) {\n                                imgSrc=\"--\";\n                            }\n                        }\n                        \n                        // image link\n                        if (apiParser.imgHrefSelector==null){\n                            imgHref=apiParser.imgHref;\n                        }\n                        else {\n                            imgHref=eval(apiParser.imgHrefSelector);\n                        }\n\n                        // image alt\n                        if (apiParser.imgAltSelector==null){\n                            imgAlt=\"in1\";\n                        }\n                        else {\n                            imgAlt=eval(apiParser.imgAltSelector);\n                        }\n                        \n                        // tags\n                        var tags = [];\n                        if (apiParser.tagsSelector) {\n                            tags = eval(apiParser.tagsSelector);\n                        }\n                        if (apiParser.queryTags) {\n                            tags.push(apiParser.queryTags);\n                        }\n                        \n                        var itemObj = {\n                            api:apiParser.name,\n                            tags:tags,\n                            heading:fixCase(heading),\n                            txt:txt,\n                            img:{\"src\":imgSrc,\"href\":imgHref,\"alt\":imgAlt},\n                            link:{\"href\":linkHref,\"title\":imgAlt}\n                        };\n                        \n                        $div = helpers.buildItem(itemObj,$div);\n                        $div.data(\"res\",itemObj);\n                        $div.appendTo($cont);\n                    }\n                }); // end each\n\n                return $cont;\n            },\n            doRequest: function(url,dataType,cb,parser){\n                console.log(\"AJAX \" + dataType + \":\" + url);\n        \n                return $.ajax({\n                    url: url, //encodeURIComponent(url);\n                    type: \"GET\",\n                    dataType: dataType,\n                    crossDomain: true,\n                    success: function(data) {\n                        if (parser)\n                            cb($(helpers.parseResults(parser,data)));\n                        else\n                            cb(data);\n                    },\n                    error: function(status) {\n                        //console.log(\"request error:\"+url);   \n                    }\n                });\n                \n                return;\n            },\n            buildItem: function(itemObj,container) {\n                var $headDiv = $('<div class=\"head\"/>');\n                var $source = $('<div class=\"source\">'+itemObj.heading+'</div>');\n                \n                var $imgDiv = $('<div class=\"photo\"/>');\n                var $imglnk = $('<a href=\"'+itemObj.img.href+'\" title=\"'+itemObj.link.title+'\"></a>');\n                var $img = $('<image width=130 src=\"'+itemObj.img.src+'\" alt=\"'+itemObj.img.alt+'\">');\n                \n                var $bottomDiv = $('<div class=\"bottom\"><a href=\"#\" title='+itemObj.api+'>fb</a>|<a href=\"#\" class=\"x\">tw</a></div>');\n                var $footDiv = $('<div class=\"foot\"/>');\n                \n                $headDiv.appendTo(container);\n                \n                $img.appendTo($imglnk);\n                $imglnk.appendTo($imgDiv);\n                $imgDiv.appendTo(container);\n                \n                $bottomDiv.appendTo(container);\n                \n                $source.appendTo($footDiv);\n                $footDiv.appendTo(container);\n                \n                return container;\n            },\n            networkDefs: {\n                rss:{url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=10&callback=?&q=http://www.makebetterwebsites.com/feed/\",dataType:\"json\",parser:rssParser},\n                facebook:{url:'http://www.facebook.com/xxx',img:''},\n                twitter:{url:'http://twitter.com/xxx',img:''},\n                linkedin:{url:'http://www.linkedin.com/company/wildfire-interactive-inc./',img:'http://designchemical.com/blog/wp-content/themes/dc2011/dcsnt/images/icons/linkedin.png',dataType:\"text\",parser:liParser},\n                in1:{url:'http://in1.com/cast',img:'<img src=\"\">'},\n                tumblr:{url:'http://www.tumblr.com/',img:''},\n                digg:{url:'http://digg.com/',img:''},\n                googleplus:{url:'https://plus.google.com/105588557807820541973/posts',img:'http://designchemical.com/blog/wp-content/themes/dc2011/dcsnt/images/icons/google.png'},\n                pinterest:{url:'http://pinterest.com/pin/create/button/?url=xxx&media=&description=',img:''},\n                craigs:{url:\"http://providence.craigslist.org/search/?areaID=378&catAbb=sss&query=one\",dataType:\"text\",parser:cParser}\n            }\n        }\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in wall plugin');\n        }\n\n    }\n\n    $.fn.wall.defaults = {\n       networks: ['in1','facebook','twitter','linkedin']\n    }\n\n    $.fn.wall.settings = {}\n\n})(jQuery);    \n\n// helpers-----------------\n\nfunction escapeData(jsonStr) {\n\n    return jsonStr.replace(/\\\\u0009/gi, \"\\t\")\n        .replace(/\\\\u000a/gi, \"\\n\")\n        .replace(/\\\\u000d/gi, \"\\r\")\n        //.replace(/\\\\\"/gi, '')\n        .replace(/\\\\\"/gi, '\"\"')\n        .replace(/\\\\n/gi, \"\\n\")\n        .replace(/\\\\t/gi, \"\\t\")\n        .replace(/\\\\'/gi, \"\\'\")\n        .replace(/\"/g, \"\");\n\n}\n\n/*\n gets a querystring parameter value\n*/\nfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    var regex = new RegExp(regexS);\n    var results = regex.exec(window.location.href);\n    if(results == null)\n        return \"\";\n    else\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nfunction jsonGetArrayOfObjectNames(jsonObj) {\n    var a=[];\n\n    if (jsonObj == null)\n        return a;\n        \n    var obj = JSON.parse(JSON.stringify(jsonObj),function (key, value) {\n        if (typeof value === 'object' && key.length>0) {  \n            a.push(key);\n        }\n        return a;\n        });\n    \n    return a;\n}\n\nfunction fixCase(string)\n{\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nfunction shorten(string,length)\n{\n    if (string==null)\n        return;\n\n    if (string.length > length)\n        return string.substring(0,length) + \"..\";\n    else\n        return string;\n}\n\n"]],"start1":0,"start2":0,"length1":0,"length2":14098}]],"length":14098}
{"contributors":[],"silentsave":false,"ts":1343214607109,"patch":[[{"diffs":[[-1,"$(document).data('queue',[]); // set up a queue to buffer elements loaded by deferreds\n        \nvar rssParser = {\n    name: \"rss\",\n    resultsSelector: \"data.responseData.feed.entries\",\n    heading: \"RSS\",\n    headingSelector: \"item.title\",\n    txtSelector: null,\n    imgSrc: null,\n    imgSrcSelector: \"$(item.content).find(\\\"img:lt(1)\\\").attr(\\\"src\\\")\",\n    imgSrcProcessor: null,\n    imgHref: \"\",\n    imgHrefSelector: \"$(item.content).find(\\\"img:lt(1)\\\").parent().attr(\\\"href\\\")\",\n    imgAltSelector: \"item.contentSnippet\",\n    link: \"\",\n    linkSelector: null,\n    linkTipSelector: \"item.contentSnippet\",\n    preProcessor: null,\n    preCondition: \"$(item.content).find(\\\"img[src]:contains('http')\\\")\"\n};\n\n\nvar cParser = {\n     name: \"craigslist\",\n     resultsSelector:\"$(data.responseText).find(\\\"p.row:contains('pic'):lt(10)\\\")\",\n     heading: \"Craigs\",\n     headingSelector: \"$elem.find(\\\"a,font\\\").text()\",\n     txtSelector: \"\",\n     imgSrcSelector: \"\\\"http://images.craigslist.org/\\\"+$elem.find(\\\"span.ih[id]\\\").attr(\\\"id\\\")\",\n     imgSrcProcessor: \"imgSrc.replace(\\\"images:\\\",\\\"\\\")\",\n     imgHrefSelector: \"$elem.find(\\\"a\\\").attr(\\\"href\\\")\",\n     imgAltSelector: \"fixCase($(item).find(\\\"a,font\\\").text())\",\n     link: \"#\",\n     linkSelector: null,\n     linkTooltip: null,\n     preProcessor: null,\n     preCondition: \"true\"\n}\n\nvar liParser = {\n    name: \"linkedin\",\n    resultsSelector: \"data.responseData.feed.entries\",\n    heading: \"RSS\",\n    headingSelector: \"item.title\",\n    txtSelector: null,\n    imgSrc: null,\n    imgSrcSelector: \"$(item.content).find(\\\"img:lt(1)\\\").attr(\\\"src\\\")\",\n    imgSrcProcessor: null,\n    imgHref: \"\",\n    imgHrefSelector: \"$(item.content).find(\\\"img:lt(1)\\\").parent().attr(\\\"href\\\")\",\n    imgAltSelector: \"item.contentSnippet\",\n    link: \"\",\n    linkSelector: null,\n    linkTipSelector: \"item.contentSnippet\",\n    preProcessor: null,\n    preCondition: \"$(item.content).find(\\\"img[src]:contains('http')\\\")\"\n};\n   \n   \n       \nvar firstPage = function(){    // load the first page\n    console.log(\"done loading\");    \n};\n\n// p\n(function($) {\n\n    $.fn.wall = function(method) {\n\n        var methods = {\n\n            init : function(options) {\n                this.wall.settings = $.extend({}, this.wall.defaults, options);\n                networks = this.wall.settings.networks;  \n "],[1,"// plugin\n;(function ( $, window, document, undefined ) {\n\n    $.fn.socialist = function(method) {\n\n        var methods = {\n\n            init : function(options) {\n                this.socialist.settings = $.extend({}, this.socialist.defaults, options);\n                var networks = this.socialist.settings.networks,\n                    settings = this.socialist.settings;\n                    queue = [],\n                    processList = [];"],[0,"        "],[1,"\n"],[0,"       "],[-1,"processList = [];"],[0,"    "]],"start1":0,"start2":0,"length1":2356,"length2":464},{"diffs":[[0,"        "],[-1,""],[0,""],[1,"    "],[0,"element "]],"start1":571,"start2":571,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"console.log(item)\n                        var "],[0,"nw = hel"]],"start1":737,"start2":737,"length1":16,"length2":62},{"diffs":[[0,"efs[item"],[1,".name"],[0,"];\n     "]],"start1":812,"start2":812,"length1":16,"length2":21},{"diffs":[[0,"nt){"],[-1,"$(document).data('"],[0,"queue"],[-1,"')"],[0,".pus"]],"start1":875,"start2":875,"length1":33,"length2":13},{"diffs":[[0,"    "],[-1,"processList.push(helpers.doRequest(nw.url,nw.dataType,nw.cb,nw.parser))"],[1,"reqUrl = nw.url"],[0,";\n"],[-1,"\n"],[0,"    "]],"start1":924,"start2":924,"length1":82,"length2":25},{"diffs":[[0,"    "],[-1,"$.when.apply(null, processList).then(function(){\n                                \n                            //console.log(\"all done\");\n                            var $con=$('#content');\n                            var queue = $(document).data('queue'"],[1,"reqUrl = reqUrl.replace(\"|id|\",item.id);\n                        reqUrl = reqUrl.replace(\"|areaName|\",item.areaName"],[0,");\n "]],"start1":965,"start2":965,"length1":261,"length2":123},{"diffs":[[0,"    "],[-1,"    var u"],[1,"reqU"],[0,"rl"],[-1,"s"],[0," = "],[-1,"$(document).data('urls'"],[1,"reqUrl.replace(\"|num|\",settings.maxResults"],[0,");\n "]],"start1":1107,"start2":1107,"length1":46,"length2":59},{"diffs":[[0,"                "],[-1,"\n"],[0,"                "]],"start1":1177,"start2":1177,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"if (($con).hasClass(\"isotope\")) { // have we already built isotope?\n                            \n                                var $newStuff=$('<div/>');\n"],[1,"   processList.push(helpers.doRequest(reqUrl,nw.dataType,nw.cb,nw.parser,settings));\n\n                        $.when.apply($, processList).then(function(){\n    "],[0,"    "]],"start1":1217,"start2":1217,"length1":164,"length2":168},{"diffs":[[0,"               \n"],[-1,"    "],[0,"                "]],"start1":1394,"start2":1394,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"     "],[0,"queue[i].childre"]],"start1":1494,"start2":1494,"length1":37,"length2":32},{"diffs":[[0,"pendTo($"],[-1,"newStuff"],[1,"element"],[0,");\n     "]],"start1":1532,"start2":1532,"length1":24,"length2":23},{"diffs":[[0,"    "],[-1," }\n                                \n                                $con.isotope('insert',$newStuff.children(),function(){\n                                \n                                });\n                            \n                            }\n                            else {\n\n                                //console.log(queue.length)\n                                \n                                for (var i = 0; i < queue.length; i++) {\n                                    queue[i].children().appendTo($con);\n                                    //queue[i].appendTo($con);\n                                }\n                                \n                                $con.imagesLoaded(function(){\n                                    $con.isotope({\n                                        itemSelector : '.outer',\n                                        sortBy : 'random'\n                                    });\n                                });\n                            }\n                            \n                            $(document).data('queue',[]); // clear the queue;\n                            //callback();\n\n                        },function(){\n                            //console.log('some requests failed.')\n                        });\n                        \n                    });\n                    \n                });\n\n            },\n\n            public_method: function() {\n                // code goes here"],[1,"console.log(\"app\"+i);\n                            }\n                          \n                            //queue = [];\n                            sortParam = '';\n                            if (settings.random){sortParam='random'};\n                            \n                            //done - load isotope?\n                            if (settings.isotope) {\n                                $element.imagesLoaded(function(){                                  //\n                                    console.log(\"loading iso\");\n                                $element.isotope ({\n                                    transformsEnabled: false,\n                                    sortBy : sortParam\n                                })\n                            });\n                                                       }\n                        },function(){\n                            console.log('some requests failed.')\n                        });\n                    });\n                });"],[0,"\n   "]],"start1":1577,"start2":1577,"length1":1468,"length2":1008},{"diffs":[[0,";\n            }\n"],[-1,"\n"],[0,"        }\n\n     "]],"start1":2580,"start2":2580,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"loader: function loader(pageNo,resources,callback) {\n                \n            },\n            parseResults: function(apiParser,data) {\n                \n                var $cont=$('<div></div>');\n                //console.log(JSON.stringify(data));\n\n                $.each(eval(apiParser.resultsSelector), function(i,item) {\n\n                    var $elem = $(item);\n                    \n                    if (eval(apiParser.preCondition)) {\n                        var $div = $('<div class=\"outer\"></div>');           \n                                        \n                        if (apiParser.headingSelector!=null){\n                            heading = fixCase(shorten(eval(apiParser.headingSelector),29));\n                        }\n                        else {\n                            heading = apiParser.heading;\n                        }\n                        \n                        txt=eval(apiParser.txtSelector);\n                        if (txt!=null) {\n                            txt = shorten(txt,75);\n                        }\n                        else {\n                            txt = \"\";\n                        }\n                        \n                        // link href\n                        linkHref=\"#\";\n                        \n                        // link title - tooltip\n                        if (apiParser.linkTip==null){\n                            linkTip=\"in1\";\n                        }\n                        else {\n                            linkTip=eval(apiParser.linkTipSelector);\n                        }\n                        \n                        // image src\n                        if (apiParser.imgSrcSelector==null){\n                            imgSrc=apiParser.imgSrc;\n                        }\n                        else {\n                            imgSrc=eval(apiParser.imgSrcSelector);\n                            //console.log(imgSrc);\n                            if (imgSrc!=null && apiParser.imgSrcProcessor!=null){\n                                imgSrc=eval(apiParser.imgSrcProcessor);\n                            }\n                            else if (imgSrc==null) {\n                                imgSrc=\"--\";\n                            }\n                        }\n                        \n                        // image link\n                        if (apiParser.imgHrefSelector==null){\n                            imgHref=apiParser.imgHref;\n                        }\n                        else {\n                            imgHref=eval(apiParser.imgHrefSelector);\n                        }\n\n                        // image alt\n                        if (apiParser.imgAltSelector==null){\n                            imgAlt=\"in1\";\n                        }\n                        else {\n                            imgAlt=eval(apiParser.imgAltSelector);\n                        }\n                        \n                        // tags\n                        var tags = [];\n                        if (apiParser.tagsSelector) {\n                            tags = eval(apiParser.tagsSelector);\n                        }\n                        if (apiParser.queryTags) {\n                            tags.push(apiParser.queryTags);\n                        }\n                        \n                        var itemObj = {\n                            api:apiParser.name,\n                            tags:tags,\n                            heading:fixCase(heading),\n                            txt:txt,\n                            img:{\"src\":imgSrc,\"href\":imgHref,\"alt\":imgAlt},\n                            link:{\"href\":linkHref,\"title\":imgAlt}\n                        };\n                        \n                        $div = helpers.buildItem(itemObj,$div);\n                        $div.data(\"res\",itemObj);\n                        $div.appendTo($cont);\n                    }\n                }); // end each\n\n                return $cont;\n            },\n            doRequest: function(url,dataType,cb,parser){\n                console.log(\"AJAX"],[1,"parseResults: function(apiParser,data,settings) {\n                \n                var container=$('<div></div>');\n                console.log(JSON.stringify(data));\n                                                   \n                apiParser.resultsSelector = apiParser.resultsSelector.replace('|num|',settings.maxResults);             \n                    \n                $.each(eval(apiParser.resultsSelector), function(i,item) {\n\n                    var $elem = $(item);\n                    //console.log(apiParser.name\n                    try{\n                    \n                        if (eval(apiParser.preCondition)) {\n                            var $div = $('<div class=\"socialist\"></div>');\n                            \n                            $div.addClass('socialist-'+apiParser.name);\n                                            \n                            if (apiParser.headingSelector!=null){\n                                heading = helpers.shorten(helpers.stripHtml(eval(apiParser.headingSelector)),settings.headingLength);\n                            }\n                            else {\n                                heading = apiParser.heading;\n                            }\n                            \n                            txt=eval(apiParser.txtSelector);\n                            if (txt!=null) {\n                                txt = helpers.shorten(txt,settings.textLength);\n                            }\n                            else {\n                                txt = \"\";\n                            }\n\n                            // link href\n                            linkHref=\"#\";\n                            \n                            // link title - tooltip\n                            if (apiParser.linkTip==null){\n                                linkTip=\"in1\";\n                            }\n                            else {\n                                linkTip=eval(apiParser.linkTipSelector);\n                            }\n                            \n                            // image src\n                            if (apiParser.imgSrcSelector==null){\n                                imgSrc=apiParser.imgSrc;\n                            }\n                            else {\n                                imgSrc=eval(apiParser.imgSrcSelector);\n                                if (imgSrc!=null && apiParser.imgSrcProcessor!=null){\n                                    imgSrc=eval(apiParser.imgSrcProcessor);\n                                }\n                                else if (imgSrc==null) {\n                                    imgSrc=\"\";\n                                }\n                            }\n                            \n                            // image link\n                            if (apiParser.imgHrefSelector==null){\n                                imgHref=apiParser.imgHref;\n                            }\n                            else {\n                                imgHref=eval(apiParser.imgHrefSelector);\n                            }\n    \n                            // image alt\n                            if (apiParser.imgAltSelector!=null){\n                                imgAlt=eval(apiParser.imgAltSelector);\n                            }\n                           \n                            date=eval(apiParser.dateSelector);\n                            if (typeof date==\"undefined\" || date===null) {\n                                date = \"\";\n                            }\n                            \n                            var itemObj = {\n                                api:apiParser.name,\n                                heading:heading,\n                                txt:txt,\n                                img:{\"src\":imgSrc,\"href\":imgHref,\"alt\":imgAlt},\n                                link:{\"href\":linkHref,\"title\":imgAlt},\n                                date:date\n                            };\n                            \n                            $div = helpers.buildItem(itemObj,$div,settings.fields);\n                            $div.appendTo(container);\n                        }\n                             \n                    }\n                    catch (e) {\n                       console.log(\"parse error:\"+apiParser.name+\":\"+e)\n                    }\n                }); // end each\n\n               return container;\n            },\n            doRequest: function(url,dataType,cb,parser,settings){\n                console.log(\"ajax:"],[0," \" +"]],"start1":2639,"start2":2639,"length1":4062,"length2":4505},{"diffs":[[0,"pe,\n"],[-1,"                    crossDomain: true,\n"],[0,"    "]],"start1":7335,"start2":7335,"length1":47,"length2":8},{"diffs":[[0,"ser,data"],[-1,""],[0,""],[1,",settings"],[0,")));\n   "]],"start1":7478,"start2":7478,"length1":16,"length2":25},{"diffs":[[0,"    "],[-1,"//console.log(\"request error:\"+url);   \n                    }\n                });\n                \n                return;\n            },\n            buildItem: function(itemObj,container) {\n                var $headDiv = $('<div class=\"head\"/>');\n                var $source = $('<div class=\"source\">'+itemObj.heading+'</div>');\n                \n                var $imgDiv = $('<div class=\"photo\"/>');\n                var $imglnk = $('<a href=\"'+itemObj.img.href+'\" title=\"'+itemObj.link.title+'\"></a>');\n                var $img = $('<image width=130 src=\"'+itemObj.img.src+'\" alt=\"'+itemObj.img.alt+'\">');\n                \n                var $bottomDiv = $('<div class=\"bottom\"><a href=\"#\" title='+itemObj.api+'>fb</a>|<a href=\"#\" class=\"x\">tw</a></div>');\n                var $footDiv = $('<div class=\"foot\"/>');\n                \n                $headDiv.appendTo(container);\n                \n                $img.appendTo($imglnk);\n                $imglnk.appendTo($imgDiv);\n                $imgDiv.appendTo(container);\n                \n                $bottomDiv.appendTo(container);\n                \n                $source.appendTo($footDiv);\n                $footDiv.appendTo(container);\n                \n                return container;\n            },\n            networkDefs: {\n                rss:{url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=10&callback=?&q=http://www.makebetterwebsites.com/feed/\",dataType:\"json\",parser:rssParser},\n                facebook:{url:'http://www.facebook.com/xxx',img:''},\n                twitter:{url:'http://twitter.com/xxx',img:''},\n                linkedin:{url:'http://www.linkedin.com/company/wildfire-interactive-inc./',img:'http://designchemical.com/blog/wp-content/themes/dc2011/dcsnt/images/icons/linkedin.png',dataType:\"text\",parser:liParser},\n                in1:{url:'http://in1.com/cast',img:'<img src=\"\">'},\n                tumblr:{url:'http://www.tumblr.com/',img:''},\n                digg:{url:'http://digg.com/',img:''},\n                googleplus:{url:'https://plus.google.com/105588557807820541973/posts',img:'http://designchemical.com/blog/wp-content/themes/dc2011/dcsnt/images/icons/google.png'},\n                pinterest:{url:'http://pinterest.com/pin/create/button/?url=xxx&media=&description=',img:''},\n                craigs:{url:\"http://providence.craigslist.org/search/?areaID=378&catAbb=sss&query=one\",dataType:\"text\",parser:cParser}\n            }\n        }\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in wall plugin');\n        }\n\n    }\n\n    $.fn.wall.defaults = {\n       networks: ['in1','facebook','twitter','linkedin']\n    }\n\n    $.fn.wall.settings = {}\n\n})(jQuery);    \n\n// helpers-----------------\n\nfunction escapeData(jsonStr) {\n\n    return jsonStr.replace(/\\\\u0009/gi, \"\\t\")\n        .replace(/\\\\u000a/gi, \"\\n\")\n        .replace(/\\\\u000d/gi, \"\\r\")\n        //.replace(/\\\\\"/gi, '')\n        .replace(/\\\\\"/gi, '\"\"')\n        .replace(/\\\\n/gi, \"\\n\")\n        .replace(/\\\\t/gi, \"\\t\")\n        .replace(/\\\\'/gi, \"\\'\")\n        .replace(/\"/g, \"\");\n\n}\n\n/*\n gets a querystring parameter value\n*/\nfunction getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    var regex = new RegExp(regexS);\n    var results = regex.exec(window.location.href);\n    if(results == null)\n        return \"\";\n    else\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nfunction jsonGetArrayOfObjectNames(jsonObj) {\n    var a=[];\n\n    if (jsonObj == null)\n        return a;\n        \n    var obj = JSON.parse(JSON.stringify(jsonObj),function (key, value) {\n        if (typeof value === 'object' && key.length>0) {  \n            a.push(key);\n        }\n        return a;\n        });\n    \n    return a;\n}\n\nfunction fixCase(string)\n{\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nfunction shorten(string,length)\n{\n    if (string==null)\n        return;\n\n    if (string.length > length)\n        return string.substring(0,length) + \"..\";\n    else\n        return string;\n}\n\n"],[1,"console.log(\"request error:\"+url);   \n                    }\n                });\n                \n                //return;\n            },\n            buildItem: function(itemObj,container,fields) {\n  \n                var $headDiv = $('<div class=\"head\"/>'),\n                    $source = $('<div class=\"source\"></div>'),\n                    $sourceLnk = $('<div><a href=\"'+itemObj.img.href+'\" title=\"'+itemObj.link.title+'\"></a></div>'),\n                    $apiSpan = $('<span class=\"api\">'+itemObj.api+'</span>'),\n                    \n                    $contentDiv = $('<div class=\"content\"/>'),\n                    $imgLnk = $('<a href=\"'+itemObj.img.href+'\" title=\"'+itemObj.link.title+'\"></a>'),\n                    $img = $('<image src=\"'+itemObj.img.src+'\" alt=\"'+itemObj.img.alt+'\">'),\n                    $shareDiv = $('<div class=\"share\"><a href=\"#\" title='+itemObj.api+'>fb</a>|<a href=\"#\" class=\"x\">tw</a></div>'),\n                    $dateSpan = $('<span class=\"date\"/>'),\n                    $footDiv = $('<div class=\"foot\"/>');\n                \n               /*\n                  if (fields.indexOf('heading')!=-1){                                                                            $headLnk.text(itemObj.heading);\n                      $headLnk.appendTo($headDiv);                                                    \n                      $headDiv.appendTo(container);\n                }\n                */\n                \n                if (fields.indexOf('image')!=-1 && itemObj.img.src){                                   \n                    $img.appendTo($imgLnk);\n                    $imgLnk.appendTo($contentDiv);\n                    //$imgDiv.addClass('socialist-'+itemObj.api);\n               }\n\n                if (fields.indexOf('text')!=-1){                                                                      $('<div>'+itemObj.txt+'</div>').appendTo($contentDiv);\n                }\n                \n                $contentDiv.appendTo(container);            \n                                                   \n                if (fields.indexOf('share')!=-1){\n                    $shareDiv.appendTo(container);\n                }\n                \n                \n                $source.appendTo($footDiv);\n                 if (fields.indexOf('source')!=-1){                                                                      $sourceLnk.text(itemObj.heading);\n                  $sourceLnk.appendTo($source);                                                                                        \n                }\n                \n                 if (fields.indexOf('date')!=-1){\n                    $dateSpan.text(itemObj.date);                            \n                   $dateSpan.appendTo($source);\n                }\n                                                   \n                $apiSpan.appendTo($source);\n                $footDiv.appendTo(container);\n                \n                return container;\n            },\n            networkDefs: {\n                rss:{url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=7&callback=?&q=|id|\",dataType:\"json\",parser:{\n                    name: \"rss\",\n                    resultsSelector: \"data.responseData.feed.entries\",\n                    heading: \"RSS\",\n                    headingSelector: \"data.responseData.feed.title\",\n                    txtSelector: \"item.title\",\n                    dateSelector: \"item.publishedDate.substring(0,17)\",\n                    imgSrc: null,\n                    imgSrcSelector: \"$(item.content).find(\\\"img:lt(1)\\\").attr('src')\",\n                    imgSrcProcessor: null,\n                    imgHref: \"\",\n                    imgHrefSelector: \"$(item.content).find(\\\"img:lt(1)\\\").parent().attr('href')\",\n                    imgAltSelector: \"item.contentSnippet\",\n                    link: \"\",\n                    linkSelector: null,\n                    linkTipSelector: \"item.contentSnippet\",\n                    preProcessor: null,\n                    preCondition: \"$(item.content).find(\\\"img[src]:contains('http')\\\")\"\n                    }\n                },\n                facebook:{url:'http://graph.facebook.com/|id|/photos',img:'',dataType:'json',parser:{name: \"facebook\",\n                    resultsSelector: \"data.data\",\n                    heading: \"Facebook\",\n                    headingSelector: \"item.from.name\",\n                    txtSelector: \"item.from.name\",\n                    dateSelector: \"helpers.timeAgo(item.created_time)\",\n                    imgSrcSelector: \"(item.images[2].source)||'/spacer.gif'\",\n                    imgSrcProcessor: null,\n                    imgHrefSelector: \"item.link\",\n                    imgAltSelector: \"item.from.name.substring(0,12)\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\"}\n                },\n                twitter:{url:'https://api.twitter.com/1/statuses/user_timeline.json?include_entities=true&include_rts=false&screen_name=|id|&count=|num|',dataType:\"jsonp\",img:'',parser:{\n                    name: \"twitter\",\n                    resultsSelector: \"data\",\n                    heading: \"Twitter\",\n                    headingSelector: \"item.user.screen_name\",\n                    txtSelector: \"item.text\",\n                    dateSelector: \"helpers.timeAgo(helpers.fixTwitter(item.created_at))\",\n                    imgSrcSelector: \"(item.user.profile_image_url)||'/assets/spacer.gif'\",\n                    imgSrcProcessor: null,\n                    imgHrefSelector: \"(item.entities.urls[0].url)||'http://www.twitter.com/'\",\n                    imgAltSelector: \"item.user.screen_name\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\"}\n                },\n                linkedin:{url:'http://www.linkedin.com/company/|id|/',img:'',dataType:\"text\",parser:{\n                    name: \"linkedin\",\n                    resultsSelector:\"$(data.responseText).find('div.feed-body:lt(|num|)')\",\n                    heading: \"LinkedIn\",\n                    headingSelector: \"$elem.find('a').text()\",\n                    txtSelector: \"($elem.find('a').text())||$elem.find('p.share-desc').html()\",                    imgSrcSelector: \"$elem.find('.feed-photo').attr('src')||$elem.find('.has-photo img').attr('src')\",                    \n                    imgSrcProcessor: null,\n                    imgHrefSelector: \"$elem.find('a').attr('href')\",\n                    imgAltSelector: \"$elem.find('a').text()\",\n                    dateSelector: \"$elem.find('span.nus-timestamp').text()\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\"}\n               },\n                in1:{url:'http://in1.com/cast',img:'<img src=\"\">'},\n                tumblr:{url:'http://www.tumblr.com/',img:''},\n                digg:{url:'http://digg.com/',img:''},\n                googleplus:{url:'https://plus.google.com/105588557807820541973/posts',img:'',dataType:'json',parser:{}},\n                instagram:{url:'',dataType:'json',img:{},parser:{\n                                 \n                }},\n                pinterest:{url:'http://pinterest.com/|id|/',img:'',dataType:\"text\",parser:{\n                    name: \"pinterest\",\n                                 resultsSelector:\"$(data.responseText).find('a.PinImage:lt(8),div.pinBoard:lt(8)')\",\n                    heading: \"Pinterest\",\n                    headingSelector: \"helpers.stripHtml($elem.find('h3.serif').html())\",\n                    txtSelector: \"$elem.find('img').attr('alt')\",\n                    imgSrcSelector: \"$elem.find('img.PinImageImg').attr('src')||$elem.find('span.cover img').attr('src')\",\n                    imgSrcProcessor: null,\n                    imgHrefSelector: \"\\\"http://pinterest.com\\\"+($elem.attr('href')||$elem.find('a').attr('href'))\",\n                    imgAltSelector: \"$elem.find('img').attr('alt')\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\"}\n               },\n               craigslist:{url:\"http://|areaName|.craigslist.org/|id|\",dataType:\"text\",parser:{\n                    name: \"craigslist\",\n                    resultsSelector:\"$(data.responseText).find(\\\"p.row:contains('pic'):lt(|num|)\\\")\",\n                    heading: \"Craigs\",\n                    headingSelector: \"helpers.fixCase($elem.find('a,font').text())\",\n                    txtSelector: \"\",\n                    imgSrcSelector: \"\\\"http://images.craigslist.org/\\\"+$elem.find(\\\"span.ih[id]\\\").attr('id')\",\n                    imgSrcProcessor: \"imgSrc.replace(\\\"images:\\\",\\\"\\\")\",\n                    imgHrefSelector: \"$elem.find('a').attr('href')\",\n                    imgAltSelector: \"helpers.fixCase($elem.find(\\\"a,font\\\").text())\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\"}\n                                 }\n            },\n            fixCase:function(string)\n            {\n                if (string==null)\n                    return;\n                \n                return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n            },\n            shorten:function(string,length)\n            {\n                if (string==null)\n                    return;\n            \n                if (string.length > length)\n                    return string.substring(0,length) + \"..\";\n                else\n                    return string;\n            },\n            stripHtml:function(w)\n            {\n                if (w==null)\n                return;\n            \n                return w.replace(/(<([^>]+)>)|nbsp;|\\s{2,}|/ig,\"\");\n\n            },\n            fixTwitter: function(created_at){\n                var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n                var pattern = /\\s/;\n                created_at = created_at.split(pattern);\n                for (i = 0, len = created_at.length; i < len; i++){\n                    day_of_week = created_at[0];\n                    day = created_at[2];\n                    month_pos = created_at[1];\n                    month = 0 + months.indexOf(month_pos) + 1;\n                    year = created_at[5];\n                    time = created_at[3];\n                }\n                return year+'-'+month+'-'+day+'T'+time+'Z';\n            },\n            timeAgo: function (date_str){\n                var time_formats = [\n                [60, 'just now', 1],\n                [120, '1 minute ago', '1 minute from now'],\n                [3600, 'minutes', 60],\n                [7200, '1 hour ago', '1 hour from now'],\n                [86400, 'hours', 3600],\n                [172800, 'yesterday', 'tomorrow'],\n                [604800, 'days', 86400],\n                [1209600, 'last week', 'next week'],\n                [2419200, 'weeks', 604800],\n                [4838400, 'last month', 'next month'],\n                [29030400, 'months', 2419200],\n                [58060800, 'last year', 'next year'],\n                [2903040000, 'years', 29030400],\n                [5806080000, 'last century', 'next century'],\n                [58060800000, 'centuries', 2903040000]\n                ];\n                var time = ('' + date_str).replace('+0000','Z').replace(/-/g,\"/\").replace(/[TZ]/g,\" \").replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n                if(time.substr(time.length-4,1)==\".\") time =time.substr(0,time.length-4);\n                \n                var seconds = (new Date - new Date(time)) / 1000;\n                var token = 'ago', list_choice = 1;\n                if (seconds < 0) {\n                    seconds = Math.abs(seconds);\n                    token = 'from now';\n                    list_choice = 2;\n                }\n                var i = 0, format;\n                while (format = time_formats[i++])\n                    if (seconds < format[0]) {\n                        if (typeof format[2] == 'string')\n                            return format[list_choice];\n                        else\n                            return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n                    }\n                return time;\n            },\n        }\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in social plugin');\n        }\n\n    }\n\n    $.fn.socialist.defaults = {\n        networks: [{name:'linkedin',id:'iatek-llc'},{name:'pinterest',id:'carolskelly/in1-com'},{name:'twitter',id:'in1dotcom'}],\n        random: true,\n        isotope: false,\n        headingLength: 34,\n        textLength: 100,\n        maxResults:5,\n        fields:['source','heading','text','date','image','followers','likes','share']\n    }\n\n    $.fn.socialist.settings = {}\n\n})(jQuery);"]],"start1":7656,"start2":7656,"length1":4348,"length2":13068}]],"length":20724,"saved":false}
{"contributors":[],"silentsave":false,"ts":1343250296571,"patch":[[{"diffs":[[-1,"// plugin\n"],[0,";(fu"]],"start1":0,"start2":0,"length1":14,"length2":4},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(item"]],"start1":719,"start2":719,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"app"]],"start1":1557,"start2":1557,"length1":32,"length2":34},{"diffs":[[0,"log(\"app"],[1,"ly"],[0,"\"+i);\n  "]],"start1":1583,"start2":1583,"length1":16,"length2":18},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(JSON"]],"start1":2754,"start2":2754,"length1":32,"length2":34},{"diffs":[[0,"k = $('<"],[-1,"div><"],[0,"a href=\""]],"start1":8008,"start2":8008,"length1":21,"length2":16},{"diffs":[[0,"itle+'\"></a>"],[1,"'),\n                    $sourceLnkDiv = $('"],[0,"<"],[-1,"/"],[0,"div"],[1,"/"],[0,">')"],[-1,","],[1,";"],[0,"\n           "]],"start1":8069,"start2":8069,"length1":33,"length2":76},{"diffs":[[0,"               \n"],[1,"                if (fields.indexOf('text')!=-1 || fields.indexOf('image')!=-1) {\n"],[0,"                "]],"start1":9621,"start2":9621,"length1":32,"length2":113},{"diffs":[[0,"r);            \n"],[1,"                }\n"],[0,"                "]],"start1":9763,"start2":9763,"length1":32,"length2":50},{"diffs":[[0,"ceLnk.appendTo($"],[1,"sourceLnkDiv);                                                                                     \n                  $sourceLnkDiv.appendTo($"],[0,"source);        "]],"start1":10224,"start2":10224,"length1":32,"length2":174},{"diffs":[[0,"Ago("],[-1,"item.created_time"],[1,"'2008-01-28T20:24:17Z'"],[0,")\",\n"]],"start1":12420,"start2":12420,"length1":25,"length2":30},{"diffs":[[0,"r: \""],[-1,"helpers.timeAgo(helpers.fixTwitter("],[0,"item"]],"start1":13271,"start2":13271,"length1":43,"length2":8},{"diffs":[[0,"eated_at"],[-1,"))"],[0,"\",\n     "]],"start1":13282,"start2":13282,"length1":18,"length2":16},{"diffs":[[0,"                "],[1,"        "],[0,"headingSelector:"]],"start1":13992,"start2":13992,"length1":32,"length2":40},{"diffs":[[0,": \"$elem.find('a"],[1,":first"],[0,"').text()\",\n    "]],"start1":14031,"start2":14031,"length1":32,"length2":38},{"diffs":[[0,"                "],[1,"        "],[0,"txtSelector: \"($"]],"start1":14069,"start2":14069,"length1":32,"length2":40},{"diffs":[[0," \"($elem.find('a"],[1,":last"],[0,"').text())||$ele"]],"start1":14105,"start2":14105,"length1":32,"length2":37},{"diffs":[[0,"com/"],[-1,"105588557807820541973/posts',img:'',dataType:'json',parser:{"],[1,"|id|',img:'',dataType:'text',parser:{\n                    name: \"google\",\n                    resultsSelector:\"$(data.responseText).find('div.zg:lt(|num|)')\",\n                    heading: \"Google+\",\n                    headingSelector: \"$elem.find('a.YF').text()\",\n                    txtSelector: \"$elem.find('div.XF').text()\",\n                    imgSrcSelector: \"$elem.find('a.Mn img').attr('src')\",                    \n                    imgSrcProcessor: null,\n                    imgHrefSelector: \"$elem.find('a.YF').attr('href')\",\n                    imgAltSelector: \"$elem.find('a.Mn img').attr('alt')\",\n                    dateSelector: \"$elem.parents('div.qf').find('a.Bf').text()\",\n                    link: \"#\",\n                    preProcessor: null,\n                    preCondition: \"true\""],[0,"}},\n"]],"start1":14931,"start2":14931,"length1":68,"length2":812},{"diffs":[[0,"pinterest\",\n"],[-1,"             "],[0,"            "]],"start1":15982,"start2":15982,"length1":37,"length2":24},{"diffs":[[0,"d:lt(8)')\",\n"],[1,""],[0,"            "]],"start1":16086,"start2":16086,"length1":24,"length2":24},{"diffs":[[0,"    "],[-1,"fixTwitter: function(created_at){\n                var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n            "],[1," timeAgo: function (time){\n                    time = time.replace('+0000','Z');\n"],[0,"    var "],[-1,"pattern = /\\s/;\n                created_at = created_at.split(pattern);\n                for (i = 0, len = created_at.length; i < len; i++){\n                    day_of_week = created_at[0];\n                    day = created_at[2];\n                    month_pos = created_at[1];\n                    month = 0 + months.indexOf(month_pos) + 1;\n                    year = created_at[5];\n                    time = created_at[3];\n                }\n                return year+'-'+month+'-'+day+'T'+time+'Z';\n            },\n            timeAgo: function (date_str){\n                var time_formats = [\n                [60, 'just now', 1],\n                [120, '1 minute ago', '1 minute from now'],\n                [3600, 'minutes', 60],\n                [7200, '1 hour ago', '1 hour from now'],\n                [86400, 'hours', 3600],\n                [172800, 'yesterday', 'tomorrow'],\n                [604800, 'days', 86400],\n                [1209600, 'last week', 'next week'],\n                [2419200, 'weeks', 604800],\n                [4838400, 'last month', 'next month'],\n                [29030400, 'months', 2419200],\n                [58060800, 'last year', 'next year'],\n                [2903040000, 'years', 29030400],\n                [5806080000, 'last century', 'next century'],\n                [58060800000, 'centuries', 2903040000]\n                ];\n                var time = ('' + date_str).replace('+0000','Z').replace(/-/g,\"/\").replace(/[TZ]/g,\" \").replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n                if(time.substr(time.length-4,1)==\".\") time =time.substr(0,time.length-4);\n                \n                var seconds = (new Date - new Date(time)) / 1000;\n                var token = 'ago', list_choice = 1;\n                if (seconds < 0) {\n                    seconds = Math.abs(seconds);\n                    token = 'from now';\n                    list_choice = 2;\n                }\n                var i = 0, format;\n                while (format = time_formats[i++])\n                    if (seconds < format[0]) {\n                        if (typeof format[2] == 'string')\n                            return format[list_choice];\n                        else\n                            return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n                    }\n                return time;\n            },"],[1,"date = new Date((time || \"\").replace(/-/g,\"/\").replace(/[TZ]/g,\" \")),\n        diff = (((new Date()).getTime() - date.getTime()) / 1000),\n        day_diff = Math.floor(diff / 86400);\n            \n    if ( isNaN(day_diff) || day_diff < 0 || day_diff >= 31 )\n        return;\n            \n    return day_diff == 0 && (\n            diff < 60 && \"just now\" ||\n            diff < 120 && \"1 minute ago\" ||\n            diff < 3600 && Math.floor( diff / 60 ) + \" minutes ago\" ||\n            diff < 7200 && \"1 hour ago\" ||\n            diff < 86400 && Math.floor( diff / 3600 ) + \" hours ago\") ||\n        day_diff == 1 && \"Yesterday\" ||\n        day_diff < 7 && day_diff + \" days ago\" ||\n        day_diff < 31 && Math.ceil( day_diff / 7 ) + \" weeks ago\";\n},\n\n            timeSince: function (date) {\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = Math.floor(seconds / 31536000);\n\n    if (interval > 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}"],[0,"\n   "]],"start1":18427,"start2":18427,"length1":2518,"length2":1548},{"diffs":[[0,"sotope: "],[-1,"fals"],[1,"tru"],[0,"e,\n     "]],"start1":20530,"start2":20530,"length1":20,"length2":19},{"diffs":[[0,"Length: "],[-1,"1"],[1,"2"],[0,"00,\n    "]],"start1":20583,"start2":20583,"length1":17,"length2":17},{"diffs":[[0,"Results:"],[-1,"5"],[1,"7"],[0,",\n      "]],"start1":20607,"start2":20607,"length1":17,"length2":17}]],"length":20756,"saved":false}
